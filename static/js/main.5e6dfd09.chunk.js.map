{"version":3,"sources":["Actions/actions.js","Reducers/reducers.js","Components/CalculatorButton.js","Components/Screen.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","constants","addAction","removeAction","clearAction","computeAction","ADD","REMOVE","CLEAR","COMPUTE","value","type","payload","lastIndx","inputArray","length","addValue","array","concat","checkScreenArrLength","addNumber","lastSimbIndx","console","log","splice","addDecimalPoint","indexOf","lastIndexOf","addOperators","add","state","screenArr","search","remove","calcReducer","action","Object","_home_denis_green_react_projects_calc_fcc_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","result","eval","join","toFixed","toString","CalculatorButton","props","react_default","a","createElement","Fragment","id","className","onClick","content","Screen","screenString","woKeysArray","buttonsArray","map","item","key","numbersArray","filter","operatorsArray","initialState","Calculator","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","handleClick","e","preventDefault","target","mathToUnicode","string","replace","match","p1","p2","p3","p4","numberButtons","src_Components_CalculatorButton","assign","operatorsButtons","Screen_Screen","role","aria-label","App","src_Calculator_0","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e6dfd09.chunk.js","sourcesContent":["export const constants = {\n\tADD: \"ADD\",\n\tREMOVE: \"REMOVE\",\n\tCLEAR: \"CLEAR\",\n\tCOMPUTE: \"COMPUTE\"\n}\n\nexport const addAction = (value)=>({type:constants.ADD, payload: value})\n\nexport const removeAction = ()=> ({type: constants.REMOVE})\n\nexport const clearAction = ()=>({type:constants.CLEAR})\n\nexport const computeAction = ()=> ({type:constants.COMPUTE})\n\n","import {constants} from '../Actions/actions.js'\n\n//calculator reducers\nconst lastIndx = (inputArray) =>  inputArray.length - 1;\nconst addValue = (array, value)=> array.concat(value)\n\n//check state array length\nfunction checkScreenArrLength(inputArray, value){\n\t\tif(inputArray.length < 15){\n         \n\t\treturn value\n\t\t\n      }else if(inputArray.length === 15){\n        return \"E\"\n         \n      }\n\t}\n//reducer to add value to the array\nconst addNumber = (array, value) =>{\n\tlet lastSimbIndx = lastIndx(array)\n\t\t    \n\t\t    if(array[lastSimbIndx]=== \"0\"){\n\t\t\t\tconsole.log(\"case array[lastSimbIndx]=== 0\", array[lastSimbIndx] === 0, lastSimbIndx)\n\t\t        if(lastSimbIndx === 0 || \n\t\t         array[lastSimbIndx - 1] === '+' ||\n\t\t          array[lastSimbIndx - 1] === '-' || \n\t\t          array[lastSimbIndx - 1] === '*'|| \n\t\t          array[lastSimbIndx - 1] === '/'){\n\t\t         \t //removing\n\t\t         \t console.log(\"case lastSimbIndx === 0\", lastSimbIndx === 0, lastSimbIndx)\n\t\t         \t \n\t\t         \tarray = array.splice(0,(array.length - 1))\n\t\t             \n\t\t        }\n\t\t    }else{console.log(\"ne proshel\", array[lastSimbIndx] ===\"0\", lastSimbIndx, array[lastSimbIndx], array)}\n\treturn addValue(array, value)\n}\n\nconst addDecimalPoint = (array, value)=>{\n\tlet lastSimbIndx = lastIndx(array)\n\tif(array[lastSimbIndx]!== \".\"){\n\t\tconsole.log(array[lastSimbIndx], (array[lastSimbIndx]!== \".\"))\n\t\tif(array[lastSimbIndx] === '+' ||\n\t      array[lastSimbIndx] === '-' || \n\t      array[lastSimbIndx] === '*'|| \n\t      array[lastSimbIndx] === '/'){\n\t\t\treturn array.concat(\"0\", \".\")\n\n\t\t}else{\n\n\t\t\tif(array.indexOf(\".\")!== -1){\n\t\t\t\t\n\t\t\t\tif(array.lastIndexOf(\".\")<array.lastIndexOf(\"+\")||\n\t\t\t\t\tarray.lastIndexOf(\".\")<array.lastIndexOf(\"-\")||\n\t\t\t\t\tarray.lastIndexOf(\".\")<array.lastIndexOf(\"*\")||\n\t\t\t\t\tarray.lastIndexOf(\".\")<array.lastIndexOf(\"/\")){\n\t\t\t\t\treturn addValue(array, value)\n\t\t\t\t}else{\n\t\t\t\t\treturn array\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}else{\t\n\t\t\t\treturn addValue(array, value)\n\t\t\t}\n\t\t\t\n\t\t}\n\t}else{\t\n\t\treturn array\n\t}\n\n}\n\nconst addOperators = (array, value)=>{\n\tlet lastSimbIndx = lastIndx(array)\n\tif(array[lastSimbIndx] === '+' ||\n\t      array[lastSimbIndx] === '-' || \n\t      array[lastSimbIndx] === '*'|| \n\t      array[lastSimbIndx] === '/'||\n\t      array[lastSimbIndx] === '.'){\n\t\t         \t //removing\n\t\t         \t console.log(\"case lastSimbIndx === 0\", lastSimbIndx === 0, lastSimbIndx)\n\t\t         \t \n\t\t         \tarray = array.splice(0,(array.length - 1))\n\t}\n\treturn addValue(array, value)\n}\n\nconst add = (state, value)=>{\n\tconsole.log(state)\n\tif(state.screenArr.length < 16){\n\t\tvalue = checkScreenArrLength(state.screenArr, value)\n\t\t//add number\n\t\tif(value.search(/\\d/) !== -1){\n\t\t\treturn addNumber(state.screenArr, value)\n\t\t}else if(value === \".\"){\n\t\t\treturn addDecimalPoint(state.screenArr, value)\n\t\t}else{\n\t\t\treturn addOperators(state.screenArr, value)\n\t\t}\n\t}else{\n\t\treturn state.screenArr\n\t}\n}\n\nconst remove = (array) => {\n\tif(array.length === 1){\n\t\treturn [\"0\"];\n\t}else{\n\t\treturn array.splice(0,(array.length - 1))\n\t}\n\t\n}\n\n\n \n\n\nexport function calcReducer(state, action){\n\tswitch(action.type) {\n\t\tcase constants.ADD:\n\t\t\tconsole.log(typeof(action.payload))\n\t\t\treturn {...state, screenArr: add(state, action.payload)}\n\t\tcase constants.REMOVE:\n\t\t\t//console.log(action.type)\n\t\t\treturn {...state, screenArr: remove(state.screenArr)}\n\t\tcase constants.CLEAR:\n\t\t\treturn {screenArr: [\"0\"], result: \"clear\"}\n\t\tcase constants.COMPUTE:\n\t\t\tlet result = eval(state.screenArr.join(\"\"))\n\t\t\tresult = +result.toFixed(8).toString()\n\t\t\treturn {screenArr: [result], result: result}\n\t\tdefault:\n\t\t\t//console.log(action.type)\n\t\t\treturn state\n\t}\n}","import React from 'react';\nimport './CalculatorButton.css'\n\n\n\n\nconst CalculatorButton = (props) =>{\n\t\n\treturn (\n\t\t<>\n\t\t\t<button id={props.id} className={props.className} onClick = {props.onClick} value = {props.value}>\n\t\t\t\t{props.content}\n\t\t\t</button>\n\t\t</>\n\t)\n}\n\n\n\n\nexport default CalculatorButton","import React from 'react';\nimport \"./Screen.css\"\n//import Context from '../Reducers/reducers.js'\n\n\n\n\nexport default function Screen(props){\n\t\n\t\n\treturn(\n\t\t<div id= \"display\" className = \"calculator-display text-right\">\n\t\t\t{props.screenString}\n\t\t</div>\n\t\t)\n}\n","import React, {useReducer} from 'react'\nimport CalculatorButton from './Components/CalculatorButton.js'\nimport Screen from './Components/Screen.js'\n\nimport {addAction, removeAction, clearAction, computeAction} from './Actions/actions.js'\nimport {calcReducer} from './Reducers/reducers.js'\n\n//import checkFunctions from './check-func.js'\nimport './Calculator.css'\n\n//import logo from './logo.svg'\n\n//Array  of values for buttons\nconst woKeysArray = [[\"one\", \"1\"], [\"two\", \"2\"], [\"three\",\"3\"], [\"four\", \"4\"], [\"five\",\"5\"], [\"six\", \"6\"], [\"seven\", \"7\"], [\"eight\",\"8\"], [\"nine\", \"9\"], [\"zero\", \"0\"], [\"multiply\", \"*\"], [\"divide\", \"/\"], [\"add\", \"+\"], [\"subtract\", \"-\"]]\n\n//here we add keys and generate objects for buttons\nconst buttonsArray = woKeysArray.map(item => {\n\t\t\n\t\treturn {key: woKeysArray.indexOf(item), id: item[0], value: item[1]}\n\t})\n\n//filtering data for number buttons\nconst numbersArray = buttonsArray.filter(item => (item.value.search(/\\d/) !== -1))\n\n//filtering data for operators buttons\nconst operatorsArray = buttonsArray.filter(item => (item.value.search(/\\d/)=== -1))\n\n//initiating the State\nconst initialState = {\n\tscreenArr: [\"0\"],\n \tresult: \"clear\",\n }\n\n\n\n\nconst Calculator = () =>{\n\t//const [screenArr, setScreenArr] = useState([0])\n\tconst [state, dispatch] = useReducer(\n    calcReducer,\n    initialState,\n  );\n\t\n\t//let screenString = screenArr.join(\"\")\n\n\t//check functions\n\t\n   \n\n \t\n\n\tconst handleClear = () => dispatch(clearAction())\n\n\tconst handleRemove = () => dispatch(removeAction())\n\t\n\n\tconst handleEQUAL = ()=> dispatch(computeAction())\n\n\tconst handleClick = (e)=>{\n\t\te.preventDefault()\n\t\t\n\t\t\n\t\t//value = checkFunctions\n\t\tif(state.screenArr.length <18){\n\t\t\treturn(dispatch(addAction(e.target.value)))\n\t\t}\t\t\t\n\t}\n\n\tconst mathToUnicode = (string) =>{\n\t\treturn string.replace(/(\\*)|(\\/)|(\\+)|(-)/g, function(match, p1, p2, p3, p4){\n        switch(match){\n            case p1: return \"\\u00D7\";\n            case p2: return \"\\u00F7\";\n            case p3: return \"\\u002B\";\n            case p4: return \"\\u2212\";\n            default: return match;\n            }\n        });\n    }\n\t\t\t\t\n\tconst numberButtons = numbersArray.map((item) =>{\n\t\treturn(\n\t\t\t\t<CalculatorButton {...item}\n\t\t\t\t \tclassName=\"btn calculator-button-number\"\n\t\t\t\t\tcontent={item.value}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t/>\n\t\t\t)\n\t})\n\n\tconst operatorsButtons = operatorsArray.map((item) =>{\n\t\treturn(\n\t\t\t\t<CalculatorButton {...item}\n\t\t\t\t \tclassName=\"btn calculator-button-number\"\n\t\t\t\t\tcontent={mathToUnicode(item.value)}\n\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t/>\n\t\t\t)\n\t})\n    //<img src={logo} className=\"react-logo\" alt=\"react-logo\"/>\n\treturn(\n\t\t<div className=\"calculator cntainer-fluid text-center\">\n\t\t\t{console.log(state)}\n\t\t\t<p className=\"calculator-logo\"> React FCC Calculator</p>\n\t\t\t<Screen screenString={mathToUnicode(state.screenArr.join(\"\"))}/>\n\n\t\t\t{numberButtons}\n\t\t\t{operatorsButtons}\n\t\t\t<CalculatorButton\n\t\t\t\tid = \"decimal\"\n\t\t\t\tclassName=\"btn calculator-button-number\"\n\t\t\t\tvalue=\".\"\n\t\t\t\tcontent=\".\"\n\t\t\t\tonClick={handleClick}\n\t\t\t/>\n\t\t\t<div className=\"btn-group calculator-fourth-row\" role=\"group\" aria-label=\"AC-CE-equal\">\n\t\t\t\t<CalculatorButton\n\t\t\t\t\tid =\"clear\"\n\t\t\t\t\tclassName=\"btn btn-lg calculator-fourth-row-buttons  calculator-button-number calculator-button-clear\"\n\t\t\t\t\tcontent=\"AC\"\n\t\t\t\t\tonClick={handleClear}\n\t\t\t\t/>\n\n\t\t\t\t<CalculatorButton\n\t\t\t\t\tid = \"remove\"\n\t\t\t\t\tclassName=\"btn btn-lg calculator-fourth-row-buttons  calculator-button-number\"\n\t\t\t\t\tcontent=\"C\"\n\t\t\t\t\tonClick={handleRemove}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<CalculatorButton\n\t\t\t\tid = \"equals\"\n\t\t\t\tclassName=\"btn btn-lg calculator-fourth-row-buttons  calculator-button-number calculator-button-equals\"\n\t\t\t\tcontent=\"=\"\n\t\t\t\tonClick={handleEQUAL}\n\t\t\t\t/>\n            </div>{/*fourth row*/}\n\t\t\t\n\t\t</div>\n\t\t)\n} \n\nexport default Calculator","import React from 'react';\n\nimport './App.css';\n\nimport Calculator from './Calculator.js'\n\n\n\n\n\n\n\n\n\nfunction App() {\n \n  \n  return (\n    <div>\n      <Calculator/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}